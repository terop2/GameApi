PT I1=ev.point_api.point(0.0,0.0,0.0);
P I2=ev.polygon_api.sphere(I1,100,30,30);
P I3=ev.polygon_api.scale(I2,3,2,1.5);
PT I4=ev.point_api.point(0.0,0.0,0.0);
P I5=ev.polygon_api.sphere(I4,100,30,30);
P I6=ev.polygon_api.scale(I5,3,2,1.5);
P I7=ev.polygon_api.rotatey(I6,1.2);
PT I8=ev.point_api.point(0.0,0.0,0.0);
P I9=ev.polygon_api.sphere(I8,100,30,30);
P I10=ev.polygon_api.scale(I9,3,2,1.5);
P I11=ev.polygon_api.rotatey(I10,2.4);
PT I12=ev.point_api.point(0.0,0.0,0.0);
P I13=ev.polygon_api.sphere(I12,100,30,30);
P I14=ev.polygon_api.scale(I13,3,2,1.5);
P I15=ev.polygon_api.rotatey(I14,3.6);
PT I16=ev.point_api.point(0.0,0.0,0.0);
P I17=ev.polygon_api.sphere(I16,100,30,30);
P I18=ev.polygon_api.scale(I17,3,2,1.5);
P I19=ev.polygon_api.rotatey(I18,4.8);
PT I20=ev.point_api.point(0.0,0.0,0.0);
P I21=ev.polygon_api.sphere(I20,100,30,30);
P I22=ev.polygon_api.scale(I21,3,2,1.5);
P I23=ev.polygon_api.rotatey(I22,5.6);
P I24=ev.polygon_api.or_array2(std::vector<P>{I3,I7,I11,I15,I19,I23});
MT I25=ev.materials_api.m_def(ev);
MT I26=ev.materials_api.snow(ev,I25,ffee8822,ffee8833,ffffffff,0.5);
ML I27=ev.materials_api.bind(I24,I26);
PT I28=ev.point_api.point(0,0,0);
PT I29=ev.point_api.point(-30,-250,0);
PT I30=ev.point_api.point(30,-300,0);
PT I31=ev.point_api.point(30,0,0);
P I32=ev.polygon_api.quad(I28,I29,I30,I31);
P I33=ev.polygon_api.scale(I32,1,-0.5,1);
P I34=ev.polygon_api.color_faces(I33,ff00ff00,ff008800,ff003300,ff00aa00);
P I35=ev.polygon_api.translate(I34,0,200,0);
ML I36=ev.polygon_api.render_vertex_array_ml2(ev,I35);
ML I37=ev.mainloop_api.array_ml(std::vector<ML>{I27,I36});
