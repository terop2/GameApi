# 
# Copyright (C) 2009 Tero Pulkkinen
# Released under LGPL License.
#
# This file is part of Polygon.
#
# Polygon is free software: you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Polygon is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#


CFiles= GameApi_gltf.cc GameApi_diag.cc Pieces.cc Map.cc VectorTools.cc Effect.cc Buffer.cc \
	Intersect.cc Bitmap.cc Effect2.cc Shader.cc VolumeObjects.cc \
	Tree.cc Event.cc ObjectCreator.cc IntersectObject.cc Graph.cc \
	Widgets.cc Category.cc Plane.cc Coordinates.cc Triangle.cc Game.cc \
	Editor.cc Web.cc Functions.cc ShaderExpr.cc Font.cc FontEditor.cc \
	GameApi.cc GameApiTest.cc Games.cc HierarchyObject.cc Physics.cc \
        GameApiTest2.cc State.cc Serialize.cc KeyFrameEditor.cc Parser.cc \
	FreeType.cc FreeType2.cc VertexArray.cc StateChange.cc DistanceObject.cc GameRunner.cc \
	GameApi_an.cc GameApi_bm.cc GameApi_co.cc GameApi_dr.cc GameApi_ev.cc \
	GameApi_ex.cc GameApi_fbo.cc GameApi_f.cc GameApi_fn.cc \
	GameApi_fnt.cc GameApi_gr.cc GameApi_gui.cc GameApi_lay.cc \
	GameApi_li.cc GameApi_main.cc GameApi_mx.cc GameApi_pc.cc \
	GameApi_phy.cc GameApi_pla.cc GameApi_pl.cc GameApi_pt.cc \
	GameApi_pts.cc GameApi_sh.cc GameApi_shm.cc GameApi_sm.cc \
        GameApi_spa.cc GameApi_sp.cc GameApi_st.cc GameApi_su.cc \
        GameApi_tex.cc GameApi_tr.cc GameApi_trk.cc GameApi_tx.cc \
        GameApi_vbo.cc GameApi_ve.cc GameApi_vo.cc GameApi_wmod.cc \
        GameApi_wv.cc GameApi_vx.cc GameApi_cut.cc GameApi_in.cc \
	GameApi_imp.cc GameApi_plane.cc GameApi_integrator.cc Main.cc GameApi_vr.cc GameApi_low.cc GameApi_dep_add_find.cc GameApi_dep_env.cc GameApi_dep_arr_render.cc GameApi_webcam.cc


CFiles2 = 

CFiles_examples = GameApiTest3.cc GameApiTest4.cc GameApiWorld.cc GameApiTest5.cc GameApiTest6.cc GameApiTest7.cc GameApiTest8.cc GameApiTest9.cc GameApiTestA.cc
CFiles2_examples = ExampleMain.cc
Subdirs = 
#module1

OFiles = $(patsubst %.cc,objs/%.bc,$(CFiles))
O2Files = $(patsubst %.cc,objs/%.bc,$(CFiles2))
OFiles_nothreads = $(patsubst %.cc,objs/nothreads/%.bc,$(CFiles))
O2Files_nothreads = $(patsubst %.cc,objs/nothreads/%.bc,$(CFiles2))
DFiles = $(patsubst %.cc,objs/%.d,$(CFiles)) 
D2Files = $(patsubst %.cc,objs/%.d2,$(CFiles2)) 
HFiles = $(patsubst %.cc,%.hh,$(CFiles))
#GCHFiles = $(patsubst %.cc,objs/%.hh.gch,$(CFiles))
#GCH2Files = $(patsubst %.cc,objs/%.hh.gch2,$(CFiles))
Subdirsx = $(patsubst %,%build,$(Subdirs))

OFiles_examples = $(patsubst %.cc,objs/%.bc,$(CFiles_examples))
O2Files_examples = $(patsubst %.cc,objs/%.bc,$(CFiles2_examples))
DFiles_examples = $(patsubst %.cc,objs/%.d,$(CFiles_examples)) 
D2Files_examples = $(patsubst %.cc,objs/%.d2,$(CFiles2_examples)) 
HFiles_examples = $(patsubst %.cc,%.hh,$(CFiles_examples))
#GCHFiles_examples = $(patsubst %.cc,objs/%.hh.gch,$(CFiles_examples))
#GCH2Files_examples = $(patsubst %.cc,objs/%.hh.gch2,$(CFiles_examples))

LIBWIN = d:\cvs\SDL2-2.0.1\i686-w64-mingw32\bin
LIB2WIN = d:\cvs\freetype\lib
LIB3WIN = d:\cvs\glew-1.10.0\bin\Release\Win32
LIB4WIN = e:\cvs
LIB5WIN = d:\cvs\SDL2_image-2.0.0\i686-w64-mingw32\lib
LIB6WIN = d:\cvs\glew-1.10.0\lib
LIB7WIN = d:\cvs\pthread\pre-built.2\lib\x86
INC1WIN = d:\cvs\SDL2-2.0.1\i686-w64-mingw32\include\sdl2
INC2WIN = d:\cvs\glew-1.10.0/include
INC3WIN = d:\cvs\SDL2_image-2.0.0/i686-w64-mingw32/include\sdl2
INC4WIN = d:\cvs\SDL2-2.0.1/i686-w64-mingw32/include/SDL2
INC5WIN = d:\cvs\freetype\include
INC6WIN = d:\cvs\freetype\include\freetype2
INC7WIN = d:\cvs\pthread\pre-built.2\include
EMINC1 = /home/terop/emscripten/emsdk/emscripten/1.38.31/system/include/SDL
EMINC2 = /home/terop/emscripten/emsdk/emscripten/1.38.31/system/include
EMINC3 = /home/terop/emscripten/emsdk/emscripten/1.38.31/tests/freetype/include

CCFLAGS = -fomit-frame-pointer -s USE_FREETYPE=1 -DEMSCRIPTEN -g -g4 -O3 -std=c++17 -Wall -Wno-unused-variable -Wno-unused-private-field -Wno-mismatched-tags --memory-init-file 0 -s NO_FILESYSTEM=1 -s DISABLE_EXCEPTION_CATCHING=1  -I$(EMINC1) -I$(EMINC2) -I$(EMINC3) -Ichai/ChaiScript-6.1.0/include
CC2FLAGS = -fomit-frame-pointer -flto -s USE_FREETYPE=1 -DEMSCRIPTEN -g -g4 -std=c++17 -Wall -O3 -DGLEW_STATIC -I$(EMINC1) -I$(EMINC2) -I$(EMINC3) -Ichai/ChaiScript-6.1.0/include 
# -s USE_PTHREADS=1 -s PTHREAD_POOL_SIZE=4 -s WASM_MEM_MAX=1500Mb
#`pkg-config gtkmm-2.4 --cflags`


def: $(O2Files) libGameApi.bc

nothreads: $(O2Files_nothreads) libGameApi_nothreads.bc

default: glew.o libGameApi.dll main.exe

all: libGameApi.so libGameApi.dll install main

examples: main

main: $(OFiles_examples) Makefile GameApi.hh libGameApi.so
	@echo g++ main
	@g++ $(OFiles_examples) -std=c++11 -o main -L. -lGameApi -lGL -lm -lstdc++

main.exe: $(O2Files_examples) Makefile GameApi.hh libGameApi.dll
	@echo mingw main.exe
	@$(CCWIN) $(O2Files_examples) -o main.exe -L. -lGameApi -lopengl32 -lm -lstdc++

libGameApi.bc: $(O2Files) $(OFiles) Makefile
	echo em++ libGameApi.bc
	em++ $(OFiles) $(O2Files) -o libGameApi.bc

libGameApi_nothreads.bc: $(O2Files_nothreads) $(OFiles_nothreads) Makefile
	echo em++ libGameApi.bc
	em++ $(OFiles_nothreads) $(O2Files_nothreads) -o libGameApi_nothreads.bc


libGameApi.so: $(OFiles) Makefile
	@echo g++ libGameApi.so
	@g++ -shared $(OFiles) -std=c++0x -o libGameApi.so -lSDL2 -lGL -lSDL2_image -lGLEW -lfreetype -lstdc++ 
#`pkg-config gtkmm-2.4 --libs` 

libGameApi.dll: $(O2Files) Makefile.win32 glew.o
	@echo mingw libGameApi.dll
	@g++ -L$(LIBWIN) -L$(LIB2WIN) -L$(LIB3WIN) -L$(LIB4WIN) -L$(LIB5WIN) -L$(LIB6WIN) -L$(LIB7WIN) -shared $(O2Files) -DGLEW_STATIC glew.o -o libGameApi.dll -lSDL2 -lSDL2_image -lSDL2_mixer -lfreetype -lstdc++ -lgcc -lwsock32 -lopengl32 -lpthreadGC2

subdirs: $(Subdirs)

$(Subdirs):
	$(MAKE) -C $@

.PHONY: subdirs $(Subdirs)

ctags: TAGS

TAGS: $(CFiles)
	etags -o TAGS -l c++ $(CFiles)

CC = em++
CCWIN = em++
SED = sed
RM = rm
#mingw32-g++

$(DFiles): objs/%.d: %.cc
	@echo Deps $< -o $@
	@$(CCWIN) -M $(CCFLAGS) $(CC2FLAGS) $< \
	|$(SED) 's,\($*\)\.bc[ :]*,objs/\1.bc $@ : ,g' > $@

$(D2Files): objs/%.d2: %.cc
	@echo Deps $< -o $@
	@$(CCWIN) -M $(CC2FLAGS) $< \
	|$(SED) 's,\($*\)\.bc[ :]*,objs/\1.bc $@ : ,g' > $@

$(OFiles): objs/%.bc : %.cc
	@echo em++ $< -o $@
	@$(CCWIN) -c $(CCFLAGS) $< -o $@

$(O2Files): objs/%.bc : %.cc
	@echo mingw $<
	$(CCWIN) -c $(CCFLAGS) $< -o $@


$(OFiles_nothreads): objs/nothreads/%.bc : %.cc
	@echo em++ $< -o $@
	@$(CCWIN) -DNO_THREADS -c $(CCFLAGS) $< -o $@

$(O2Files_nothreads): objs/nothreads/%.bc : %.cc
	@echo mingw $<
	$(CCWIN) -DNO_THREADS -c $(CCFLAGS) $< -o $@


glew.o:
	$(CCWIN) -c $(CC2FLAGS) d:\cvs\glew-1.10.0\src\glew.c -o glew.o


$(OFiles_examples): objs/%.bc : %.cc GameApi.hh
	$(CC) -std=c++0x -c -I. $(CCFLAGS) $< -o $@ 

$(O2Files_examples): objs/%.bc : %.cc GameApi.hh
	@echo mingw $<
	$(CCWIN) -std=c++0x -c -I. $(CC2FLAGS) $< -o $@ 


#$(GCHFiles): objs/%.hh.gch : %.hh
#	@$(CC) $(CCFLAGS) -std=c++11 -x c++-header $< -o $@ 

#$(GCH2Files): objs/%.hh.gch2 : %.hh
#	@echo mingw $<
#	@$(CCWIN) $(CC2FLAGS) -x c++-header $< -o $@ 

#$(GCHFiles_examples): objs/%.hh.gch : %.hh GameApi.hh
#	@$(CC) $(CCFLAGS) -std=c++0x -I. -x c++-header $< -o $@ 

clean:
	@$(RM) -rf objs/*.bc objs/*.bc objs/*.gch objs/*.gch2
	@$(RM) -rf objs/nothreads/*.bc objs/nothreads/*.bc objs/nothreads/*.gch objs/nothreads/*.gch2
	@$(RM) main
	@echo Clean.

profile:
	$(RM) profile.txt
	gprof ./main ./gmon.out >profile.txt


make_sourcedist:
	rm -f GameApi.tar.gz
	rm -rf GameApi
	mkdir GameApi
	cp *.cc *.hh GameApi/
	cp Makefile GameApi/
	cp Makefile_bindist GameApi/
	cp COPYING.LESSER GameApi/
	cp README.INSTALL GameApi/
	mkdir GameApi/objs
	tar czvf GameApi.tar.gz GameApi
	rm -rf GameApi

make_binarydist:
	rm -f GameApi-binary.tar.gz
	rm -rf GameApiBinary
	mkdir GameApiBinary
	cp libGameApi.so GameApiBinary/
	cp GameApi.hh GameApiBinary/
	cp COPYING.LESSER GameApiBinary/
	cp README.INSTALL GameApiBinary/
	cp Makefile_bindist GameApiBinary/Makefile
	tar czvf GameApi-binary.tar.gz GameApiBinary
	rm -rf GameApiBinary

install:
	make -f Makefile_bindist install


make_commit:
	git commit -a

make_push:
	git push ~/cvs/demo-gxit-push/demo3d.git master

-include $(DFiles)
-include $(D2Files)
-include $(DFiles_examples)
-include $(D2Files_examples)
